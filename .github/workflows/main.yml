name: Release Statically Linked Rust Binary

on:
  push:
    tags:
      - "v*" # Trigger on tags like 'v1.0.0'
  workflow_dispatch: # Manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl # Linux (musl)
          - aarch64-unknown-linux-musl # ARM Linux (musl)
          - x86_64-apple-darwin # macOS (Intel)
          - aarch64-apple-darwin # macOS (Apple Silicon)

    env:
      BINARY_NAME: fileorganizer-cli

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Cross (Linux targets only)
        if: contains(matrix.target, 'linux')
        run: cargo install cross

      - name: Install Target for Compilation
        run: rustup target add ${{ matrix.target }}

      - name: Build Binary
        run: |
          if [[ "${{ matrix.target }}" == *"linux"* ]]; then
            cross build --target ${{ matrix.target }} --release --verbose
          else
            cargo build --target ${{ matrix.target }} --release --verbose
          fi

      - name: Create Release Archive
        run: |
          mkdir -p release
          BIN_PATH="target/${{ matrix.target }}/release/$BINARY_NAME"

          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            cp "$BIN_PATH.exe" release/
            zip -r "${{ matrix.target }}.zip" release/*
          else
            cp "$BIN_PATH" release/
            tar -czvf "${{ matrix.target }}.tar.gz" -C release $BINARY_NAME
          fi

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            *.tar.gz
            *.zip
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_BINARY_TOKEN }}
